syntax = "proto3";

package com.example.iam.grpc;

option java_multiple_files = true;
option java_package = "com.example.iam.grpc";
option java_outer_classname = "IamProto";

service IamRegistration {
  rpc RegisterClient(RegisterClientRequest) returns (RegisterClientResponse);
  rpc UpdateClient(UpdateClientRequest) returns (UpdateClientResponse);
  rpc DeleteClient(DeleteClientRequest) returns (DeleteClientResponse);
}

message RegisterClientRequest {
  string client_name = 1;
  repeated string client_authentication_methods = 2;
  repeated string authorization_grant_types = 3;
  repeated string redirect_uris = 4;
  repeated string post_logout_redirect_uris = 5;
  repeated string scopes = 6;
  int64 access_token_ttl = 7;
  int64 refresh_token_ttl = 8;
  bool require_authorization_consent = 9;
  bool require_proof_key = 10;
  bool reuse_refresh_tokens = 11;
  string description = 12;
}

message RegisterClientResponse {
  string id = 1;
  string client_id = 2;
  string client_secret = 3;
  string client_name = 4;
  repeated string client_authentication_methods = 5;
  repeated string authorization_grant_types = 6;
  repeated string redirect_uris = 7;
  repeated string post_logout_redirect_uris = 8;
  repeated string scopes = 9;
  ClientSettings client_settings = 10;
  TokenSettings token_settings = 11;
  string created_at = 12;
}
message ClientSettings {
  bool require_authorization_consent = 1;
  bool require_proof_key = 2;
}

message TokenSettings {
  int64 access_token_ttl = 1;
  int64 refresh_token_ttl = 2;
  bool reuse_refresh_tokens = 3;
}


message UpdateClientRequest {
  string client_id = 1;
  repeated string redirect_uris = 2;
}

message UpdateClientResponse {
  string status = 1;
}

message DeleteClientRequest {
  string client_id = 1;
}

message DeleteClientResponse {
  string status = 1;
}
